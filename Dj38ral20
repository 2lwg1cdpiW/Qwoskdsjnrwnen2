_G.sendnotif = function(title)
    local TweenService = game:GetService("TweenService")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local textlabel = Instance.new("TextLabel")
    textlabel.Size = UDim2.new(0, 0, 0, 35)  -- Start with 0 width for animation
    textlabel.Position = UDim2.new(0.5, 0, 0.2, 0)
    textlabel.AnchorPoint = Vector2.new(0.5, 0.5)
    textlabel.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
    textlabel.BorderColor3 = Color3.new(0, 0, 0)
    textlabel.BorderSizePixel = 0
    textlabel.Text = title
    textlabel.TextSize = 14
    textlabel.BackgroundTransparency = 0
    textlabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textlabel.Font = Enum.Font.SciFi
    textlabel.Parent = screenGui

    local uic = Instance.new("UICorner")
    uic.CornerRadius = UDim.new(0, 5)
    uic.Parent = textlabel

    local uis = Instance.new("UIStroke")
    uis.Color = Color3.fromRGB(30, 30, 30)
    uis.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    uis.Thickness = 1.5
    uis.Parent = textlabel

    -- Set TextWrapped to allow the label to handle long text
    textlabel.TextWrapped = true

    -- Wait for TextBounds to be calculated
    textlabel:GetPropertyChangedSignal("TextBounds"):Wait()

    -- Calculate the new width based on the TextBounds
    local textWidth = textlabel.TextBounds.X + 20 -- Add some padding
    local targetSize = UDim2.new(0, math.max(135, textWidth), 0, 35) -- Minimum width 135

    -- Animation for the initial growth
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local sizeTween = TweenService:Create(textlabel, tweenInfo, {Size = targetSize})
    sizeTween:Play()
    sizeTween.Completed:Wait()

    wait(2)

    -- Fade out animation
    local fadeOutText = TweenService:Create(textlabel, TweenInfo.new(0.4), {BackgroundTransparency = 1, TextTransparency = 1})
    local fadeOutStroke = TweenService:Create(uis, TweenInfo.new(0.4), {Transparency = 1})

    fadeOutText:Play()
    fadeOutStroke:Play()

    fadeOutText.Completed:Wait()

    screenGui:Destroy()
end
