-- CustomUIHubModuleScript
local CustomUIHub = {}
CustomUIHub.__index = CustomUIHub

-- Helper function to create a new instance
local function createInstance(className, properties)
    local instance = Instance.new(className)
    for prop, value in pairs(properties) do
        instance[prop] = value
    end
    return instance
end

-- Initialize UI
function CustomUIHub:Init(parent)
    self.Parent = parent
    self.Elements = {}
end

-- Create a Button
function CustomUIHub:CreateButton(text, onClick)
    local button = createInstance("TextButton", {
        Parent = self.Parent,
        Size = UDim2.new(0, 200, 0, 50),
        BackgroundColor3 = Color3.fromRGB(0, 122, 204),
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Text = text,
        TextScaled = true
    })
    button.MouseButton1Click:Connect(onClick)
    table.insert(self.Elements, button)
    return button
end

-- Create a Toggle
function CustomUIHub:CreateToggle(text, onToggle)
    local frame = createInstance("Frame", {
        Parent = self.Parent,
        Size = UDim2.new(0, 200, 0, 50),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    })
    
    local label = createInstance("TextLabel", {
        Parent = frame,
        Size = UDim2.new(0.5, 0, 1, 0),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        TextColor3 = Color3.fromRGB(0, 0, 0),
        Text = text,
        TextScaled = true
    })

    local switch = createInstance("TextButton", {
        Parent = frame,
        Size = UDim2.new(0.5, 0, 1, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(0, 122, 204),
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Text = "OFF",
        TextScaled = true
    })
    
    local toggled = false
    switch.MouseButton1Click:Connect(function()
        toggled = not toggled
        switch.BackgroundColor3 = toggled and Color3.fromRGB(0, 204, 122) or Color3.fromRGB(0, 122, 204)
        switch.Text = toggled and "ON" or "OFF"
        onToggle(toggled)
    end)
    
    table.insert(self.Elements, frame)
    return frame
end

-- Create a Layout
function CustomUIHub:CreateLayout()
    local layout = createInstance("UIListLayout", {
        Parent = self.Parent,
        Padding = UDim.new(0, 10),
        HorizontalAlignment = Enum.HorizontalAlignment.Center
    })
    return layout
end

return CustomUIHub
